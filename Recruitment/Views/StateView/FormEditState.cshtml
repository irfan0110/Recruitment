@model Recruitment.Models.FormViewModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>FormEditState</title>
</head>
<body>
    @using (Html.BeginForm("PutState", "StateView", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>StateDTO</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FormState.StateId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FormState.StateId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.FormState.StateId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FormState.StateName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FormState.StateName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FormState.StateName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FormState.StateNext, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ddStateNext", Model.StateListItems(), new { htmlAttributes = new { @class = "form-control", @id = "ddStateNext" } })
                    <button type="button" onclick="addToTxt()">Add</button><br />
                    @Html.EditorFor(model => model.FormState.StateNext, new { htmlAttributes = new { @class = "form-control", @id = "txtStateNext", @readonly = "readonly" } })
                    <button type="button" onclick="removeTxt()">Remove</button><br />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        <a href="~/state">Cancel edit</a>
    </div>
</body>
</html>

@section scripts{
    <script>
        function addToTxt() {
            var boxTextArr = document.getElementById("txtStateNext").value.split(',');

            var dropdown = document.getElementById("ddStateNext");
            var selectedText = dropdown.options[dropdown.selectedIndex].value.substring(0, 5);

            if (dropdown.selectedIndex != 0) {
                if (boxTextArr.indexOf(selectedText) == -1) {
                    if (document.getElementById("txtStateNext").value == "") {
                        document.getElementById("txtStateNext").value += selectedText;
                    }
                    else {
                        document.getElementById("txtStateNext").value += "," + selectedText;
                    }
                }
            }
        }

        function removeTxt() {
            document.getElementById("txtStateNext").value = document.getElementById("txtStateNext").value.slice(0, -6);
        }
    </script>
}

