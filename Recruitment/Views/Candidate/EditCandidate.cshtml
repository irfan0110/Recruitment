@model Recruitment.Models.CandidateDTO
@using Recruitment.Models;

<h3>Update Personal Data</h3><strong style="color:darkgoldenrod">Note :</strong>
<h5 style="color:darkgoldenrod">If you don't have data use (-)</h5>
<hr class="bg-blue" />
<div>
    @using (Html.BeginForm("Update", "Candidate", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="row">
            <div class="col-lg-4 col-md-4  col-sm-12">
                <div class="form-group">
                    @Html.Label("Candidate ID", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.CandidateId, null, new { @class = "form-control", @readonly = "readonly" })

                </div>
                <div class="form-group">
                    @Html.Label("Full Name", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.NamaLengkap, new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.NamaLengkap, null, new { @class = "text-danger" })


                </div>
                <div class="form-group">
                    @Html.Label("Call Name", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.NamaPanggilan, new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.NamaPanggilan, null, new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.Label("Gender", new { @class = "title control-label" })

                    @Html.DropDownListFor(c => c.JenisKelamin, new SelectList(new List<string> { "P", "L" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.JenisKelamin, null, new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.Label("Place Of Birth", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.TempatLahir, new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.TempatLahir, null, new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.Label("Date Of Birth", new { @class = "title control-label" })
                    @Html.TextBoxFor(c => c.TanggalLahir, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                    @Html.ValidationMessageFor(c => c.TanggalLahir, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Religion", new { @class = "title control-label" })

                    @Html.DropDownListFor(c => c.Agama, new SelectList(new List<string> { "Islam", "Kristen", "Katolik", "Budha", "Hindu", "Kong Hu Cu" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.Agama, null, new { @class = "text-danger" })

                </div>

                <img src="@Url.Content(Model.Foto)" width="60" height="60" />
                <div class="form-group">
                    <label for="file">Upload Image:</label>
                    <input type="file" name="GambarFile" id="filefoto" accept="image/png, image/jpeg, image/jpg" />
                    @Html.ValidationMessageFor(c => c.GambarFile, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 col-md-4  col-sm-12">
                <div class="form-group">
                    @Html.Label("Address", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.AlamatRumah, new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.AlamatRumah, null, new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.Label("Parent's Address", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.AlamatOrtu, new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.AlamatOrtu, null, new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.Label("Telephone Number", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.TelpRumah, new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.TelpRumah, null, new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.Label("Email", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.Email, null, new { @class = "form-control", @type = "email" })
                    @Html.ValidationMessageFor(c => c.Email, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Phone Number", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.NoHP, null, new { @class = "form-control", @type = "number" })
                    @Html.ValidationMessageFor(c => c.NoHP, null, new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.Label("Resident Card Number", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.NoKTP, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.NoKTP, null, new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.Label("Zip Code", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.KodePos, null, new { @class = "form-control", @type = "number" })
                    @Html.ValidationMessageFor(c => c.KodePos, null, new { @class = "text-danger" })

                </div>
                @Model.CV
                <div class="form-group">
                    <label for="file">Upload CV:</label>
                    <input type="file" name="CvFile" id="CV" accept=".pdf,.docx" />
                    @Html.ValidationMessageFor(c => c.CvFile, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-12">
                <div class="form-group">
                    @Html.Label("Martial Status", new { @class = "title control-label" })

                    @Html.DropDownListFor(c => c.StatusPerkawinan, new SelectList(new List<string> { "Lajang", "Menikah" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.StatusPerkawinan, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Position", new { @class = "title control-label" })

                    @Html.DropDownListFor(c => c.JudulPosisi, new DropListSource().DropListPosition(), new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.JudulPosisi, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Recomendation", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.Referer, new { @class = "form-control" })


                </div>
                <div class="form-group">
                    @Html.Label("Source ID", new { @class = "title control-label" })

                    @Html.DropDownListFor(c => c.SourceId, new DropListSource().DropListName(), new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.SourceId, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("NPWP", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.NPWP, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.NPWP, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Avaiable Join", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.AvailableJoin, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                    @Html.ValidationMessageFor(c => c.AvailableJoin, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Expected Salary", new { @class = "title control-label" })

                    @Html.TextBoxFor(c => c.ExpectedSalary, null, new { @class = "form-control"})
                    @Html.ValidationMessageFor(c => c.ExpectedSalary, null, new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.Label("Notes", new { @class = "title control-label" })

                    @Html.TextAreaFor(c => c.Catatan, new { @class = "form-control" })
                    @Html.ValidationMessageFor(c => c.Catatan, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>

        // tes
        <div class="form-group">
            @Html.Label("State", new { @class = "title control-label" })

            @Html.DropDownListFor(model => model.StateId, new DropListSource().DropListStatePraSelect(), new { @class = "form-control" })

        </div>
        <div class="form-group">
            <input class="btn btn-info btn-sm" type="submit" value="Update" />

        </div>
    }
</div>

